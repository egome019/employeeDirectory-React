{"version":3,"sources":["components/Employee.js","components/NavRow.js","components/SearchForm.js","utils/API.js","components/Wrapper.js","App.js","reportWebVitals.js","index.js"],"names":["Employee","users","Date","date","dateArr","split","year","join","undefined","name","map","login","dob","picture","phone","email","className","src","medium","alt","first","last","href","target","uuid","NavRow","nav","Sort","width","style","onClick","toLowerCase","role","tabIndex","SearchForm","handleSearch","type","placeholder","aria-label","onChange","event","axios","get","Wrapper","state","order","filteredUsers","heading","setState","userSort","sort","a","b","localeCompare","e","newValue","value","filtered","filter","item","Object","values","indexOf","API","then","res","data","results","this","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19d3fb75.chunk.js","sourcesContent":["import React from \"react\";\n\n\nfunction Employee ({users}) {\n    function Date(date) {\n        const dateArr = date.split(\"-\");\n        const year = dateArr[0];\n        const month = dateArr[1];\n        const dayArr = dateArr[2].split(\"T\");\n        const day = dayArr[0];\n        const formatDate = [month, day, year].join(\"-\");\n        return formatDate;\n    }\n\n    return(\n        <tbody>\n            {users[0] !== undefined && users[0].name !== undefined ? (\n                users.map(({login, name, dob, picture, phone, email}) => {\n                    return (\n                        <tr key={login.uuid}>\n                            <td className=\"align-middle\">\n                                <img src={picture.medium}\n                                alt=\"employee\"\n                                className=\"img-responsive rounded mx-auto d-block\"\n                                />\n                            </td>\n                            <td className=\"text-capitalize text-center\">\n                                {name.first} {name.last}\n                            </td>\n                            <td className=\"text-center\">\n                                {Date(dob.date)}\n                            </td>\n                            <td className=\"text-center\">\n                                <a href={\"mailto:\" + email} target=\"__blank\">\n                                    {email}\n                                </a>\n                            </td>\n                            <td className=\"text-center\">\n                                {phone}\n                            </td>\n                        </tr>\n                    );\n                })\n            ) : (\n                <></>\n            )}\n        </tbody>\n    );\n}\n\nexport default Employee;","import React from \"react\";\nimport Employee from \"./Employee\";\n\nfunction NavRow ({nav, Sort, users}) {\n    return (\n        <div className=\"table-responsive\">\n            <table className=\"table table-hover\">\n                <thead>\n                    <tr>\n                        {nav.map(({name, width}) => {\n                            return (\n                                <th className=\"col text-center\"\n                                    key={name}\n                                    style={{width}}\n                                    onClick={()=> {\n                                        Sort(name.toLowerCase());\n                                    }}\n                                >\n                                    <span className=\"dropdown-toggle\" role=\"button\" tabIndex=\"0\">{name}</span>\n                                </th>\n                            );\n                        })}\n                    </tr>\n                </thead>\n                <Employee users={users} />\n            </table>\n        </div>\n    )\n}\n\nexport default NavRow;","import React from \"react\";\n\nfunction SearchForm({handleSearch}) {\n    return (\n        <nav className=\"navbar navbar-expand navbar-dark bg-light\">\n            <div className=\"navbar-collapse row\">\n                <form className=\"mx-auto\">\n                    <div className=\"form-inline\">\n                        <div className=\"form-group mb-2\">\n                            <label>Search:</label>\n                        </div>\n                        <div className=\"form-group mx-sm-3 mb-2\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Search for Employee\"\n                                aria-label=\"Search\"\n                                onChange={event => handleSearch(event)}\n                            />\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </nav>\n    );\n}\n\nexport default SearchForm;","import axios from \"axios\";\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n    search: function() {\n        return axios.get(\"https://randomuser.me/api/?results=100&nat=us\");\n    }\n};","import React, { Component } from \"react\";\nimport NavRow from \"./NavRow\";\nimport SearchForm from \"./SearchForm\";\nimport API from \"../utils/API\";\n\nclass Wrapper extends Component {\n    state = {\n        users: [{}],\n        order: \"descend\",\n        filteredUsers: [{}]\n    }\n    \n    nav = [\n        {name: \"Image\", width: \"10%\"},\n        {name: \"Name\", width: \"10%\"},\n        {name: \"DOB\", width: \"10%\"},\n        {name: \"Email\", width: \"20%\"},\n        {name: \"Phone\", width: \"20%\"}\n    ]\n\n    componentDidMount() {\n        API.search().then(res => {\n            this.setState({\n                users: res.data.results,\n                filteredUsers: res.data.results\n            });\n        });\n    }\n\n    Sort = heading => {\n        if(this.state.order === \"descend\"){\n            this.setState({\n                order: \"ascend\" \n            })\n        }else {\n            this.setState({\n                order: \"descend\"\n            })\n        }\n\n\n        const compareOrder = (a,b) => {\n            if (this.state.order === \"ascend\") {\n                if (a[heading] === undefined) {\n                    return 1;\n                }else if (b[heading] === undefined){\n                    return -1;\n                }else if (heading === \"name\") {\n                    return a[heading].first.localeCompare(b[heading].first);\n                }else{\n                    return a[heading]-b[heading]\n                }\n            }else{\n                if (a[heading] === undefined) {\n                    return 1;\n                }else if (b[heading] === undefined){\n                    return -1;\n                }else if (heading === \"name\") {\n                    return b[heading].first.localeCompare(a[heading].first);\n                }else{\n                    return b[heading]-a[heading]\n                }\n            }\n        }\n\n        const userSort = this.state.filteredUsers.sort(compareOrder);\n        this.setState({filteredUsers: userSort});\n    }\n\n    handleSearch = e => {\n        const newValue = e.target.value;\n        const filtered = this.state.users.filter(item => {\n            let values = Object.values(item).join(\"\").toLowerCase();\n            return values.indexOf(newValue.toLowerCase()) !== -1;\n        })\n        this.setState({filteredUsers: filtered});\n    }\n\n    render() {\n        return (\n            <div>\n                <header className=\"py-4 bg-dark mb-1 border-bottom border-danger text-light w-100\">\n                    <h1 className=\"text-center\">Employee Directory</h1>\n                    <p className=\"text-center\">Click on carrots to filter by heading or use the search box to narrow your results.</p>\n                </header>\n                <SearchForm handleSearch={this.handleSearch} />\n                <div className=\"w-100\">\n                    <NavRow nav={this.nav}\n                    users={this.state.filteredUsers}\n                    Sort={this.Sort}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Wrapper;","import Wrapper from './components/Wrapper';\n\nfunction App() {\n  return <Wrapper />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}